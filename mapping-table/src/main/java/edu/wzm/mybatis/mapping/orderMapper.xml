<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="edu.wzm.mybatis.mapping.orderMapper">

    <insert id="insert" parameterType="Order">
        insert into orders(order_no, order_price)
        values(#{orderNo}, #{price})
    </insert>

    <!--
        如果表中的字段名和实体类属性名不相同，那么查询出来的结果为 null。
    -->
    <select id="selectWithNothing" parameterType="int" resultType="Order">
        select order_id, order_no, order_price
        from orders
        where order_id = #{id}
    </select>

    <!--
        解决方案一：使用别名, 如果不使用别名，则将返回 null
        根据id查询得到一个order对象，使用这个查询是可以正常查询到我们想要的结果的，
        这是因为将查询的字段名都起一个和实体类属性名相同的别名，这样实体类的属性名和查询结果中的字段名就可以一一对应上。
    -->
    <select id="selectWithAlias" parameterType="int" resultType="Order">
        select order_id id, order_no orderNo, order_price price
        from orders
        where order_id = #{id}
    </select>

    <!--
        解决方案二：
        根据id查询得到一个order对象，使用这个查询是可以正常查询到我们想要的结果的，
        这是因为通过 <resultMap> 映射实体类属性名和表的字段名一一对应关系
    -->
    <select id="selectWithMapping" parameterType="int" resultMap="OrderMapping">
        select order_id, order_no, order_price
        from orders
        where order_id = #{id}
    </select>
    <!-- 通过<resultMap>映射实体类属性名和表的字段名对应关系 -->
    <resultMap id="OrderMapping" type="Order">
        <!-- id属性来映射主键字段 -->
        <id column="order_id" property="id" javaType="int"/>
        <!-- result属性映射非主键字段 -->
        <result column="order_no" property="orderNo" javaType="String"/>
        <result column="order_price" property="price"/>
    </resultMap>
</mapper>